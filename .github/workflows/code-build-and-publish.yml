name: Build and Publish Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

defaults:
  run:
    working-directory: ./code

jobs:
  build-and-verify:
    name: Build and Verify
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        # cache/restore any dependencies to improve the workflow execution time
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    # Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - Enable Dependabot in the repository. Go to Settings > Code Security & analysis > Dependabot alerts and enable the feature.
    # - Add Github Token permission. Ge to Settings > Actions > General and enabling Workflow permissions as “Read and write permissions.”
    # Also configure Secret Scanning with the repository. 
    # - Go to Settings > Code Security & analysis and enable Secret Scanning. Enable “Push Protection” as well which will prevent secrets from being pushed to the repository.
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@v3
      with:
        ignore-maven-wrapper: true
        directory: ./code
  publish:
      name: Publish
      runs-on: ubuntu-latest
      needs: [build-and-verify]
      if: github.ref == 'refs/heads/main'
      steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: ./code/staging